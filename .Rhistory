cube <- function(x, n) {
        x^3
}
cube(3)
x <- 1:10
if(x > 5) {
        x <- 0
}
ttt <- x> 5
ttt
f <- function(x) {
        g <- function(y) {
                y + z
        }
        z <- 4
        x + g(x)
}
z <- 10
f(3)
uhh <- NA
q()
dir()
dir()
source("cachemean.R")
source("makeVector.R")
myVector <- makeVector(1:5)
mean1 <- cachemean(myVector)
mean1
mean2 <- cachemean(myVector)
mean2
dir()
source("cachematrix.R")
myMatrix <- makeCacheMatrix()
myMatrix
x
myMatrix <- makeCacheMatrix(matrix(1:16,4,4)
)
myMatrix
x
myMatrix <- makeCacheMatrix(matrix(1:16,4,4))
myMatrix$x
simpleMatrix <- matrix(1:16,4,4)
simpleMatrix
myMatrix <- makeCacheMatrix(simpleMatrix)
myMatrix$x
solvedMatrix <- cacheSolve(myMatrix)
sss <- solve(simpleMatrix)
dir()
source("cachmatrix.R")
source("cachematrix.R")
c=rbind(c(1, -1/4), c(-1/4, 1)) 
c
solve(c)
str(solve)
help("solve")
source("cachematrix.R")
myMatrix <- makeCacheMatrix(c)
solvedMatrix <- cacheSolve(myMatrix)
solvedMatrix
solvedMatrix2 <- cacheSolve(myMatrix)
solvedMatrix2
source("cachematrix.R")
g=rbind(c(1, -1/4), c(-1/4, 1)) 
myMatrixg <- makeCacheMatrix(g)
solvedMatrixg <- cacheSolve(myMatrixg)
solvedMatrixg
solvedMatrixg2 <- cacheSolve(myMatrixg)
solvedMatrixg2
q()
